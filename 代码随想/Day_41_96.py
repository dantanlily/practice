#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Jul 11 18:57:52 2023

@author: dantan
"""

'''
96. 不同的二叉搜索树
中等
2.3K
相关企业
给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。

 

示例 1：


输入：n = 3
输出：5
示例 2：

输入：n = 1
输出：1
 

提示：

1 <= n <= 19
'''

'''
二分搜索树（英语：Binary Search Tree），也称为二叉查找树、二叉搜索树、有序二叉树或排序二叉树。 
满足以下几个条件： 若它的左子树不为空，左子树上所有节点的值都小于它的根节点。 
若它的右子树不为空，右子树上所有的节点的值都大于它的根节点。
'''

n=3

def numTrees(self, n: int):
    '''
    dp[3]，就是 元素1为头结点搜索树的数量 + 元素2为头结点搜索树的数量 + 元素3为头结点搜索树的数量

    元素1为头结点搜索树的数量 = 右子树有2个元素的搜索树数量 * 左子树有0个元素的搜索树数量
    
    元素2为头结点搜索树的数量 = 右子树有1个元素的搜索树数量 * 左子树有1个元素的搜索树数量
    
    元素3为头结点搜索树的数量 = 右子树有0个元素的搜索树数量 * 左子树有2个元素的搜索树数量
    '''
    #节点不算 左面j 右面则是i-j 个节点
    dp=[0]*(n+1)
    dp[0]=1
    for i in range(1,n+1):
        for j in range(1,i+1):
            dp[i]+=dp[j-1]*dp[i-j]
            #print(i,j,j-1,i-j)
    print(dp[n])
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    